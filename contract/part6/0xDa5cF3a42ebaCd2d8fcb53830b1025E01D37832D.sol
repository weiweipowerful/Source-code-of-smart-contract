// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@( (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(  @@%@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@%%%%@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@(  @@&%%%%%%%&@( (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@%%%%%   %%%%@@@  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@( (@@@@@@@@@@@@@@@@@(  (@%%%* *%%%%%* *%%@@(. @@@@@@@@@@@@@@@@@@( (@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@      @@@@@@@@@@@@@   @@%%%  %%%     %%%  %%@@   @@@@@@@@@@@@@@      @@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@(          (@@@@@@@@(  (&%%%%%* *%%%***%%%* *%%%&@@( (@@@@@@@@@(          (@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   @@%%%%%%%%%%         %%%%%%%%%@@   @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@                @@   (@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@ .(@@@                @@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@,           ,  ,@                                ,,           @                @@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@    ..          @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@..              @@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@  *   *              *   *                  *    *   *              *   *    *             *   @@@@@@@@@@@@
// @@@@@@@@@@@@@@@%                                                                                         @@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@%  @@@@@@@@ @@@@@@@@@ @@@@@@@@ @@@@@@@@@%@@@@@@@@ @@@@@@@@ %@@@@@@@@ @@@@@@@@ %@@@@@@@@%  @@@@@@@@@@@@@@@
// @@@@@@@@@@@@@     @@(((((@ @@(((((@@ @@((((@@ @@(((((@@%@@((((@@ @@(((((@ %@#((((@@ @@((((@@ %@(((((@@%     @@@@@@@@@@@@
// @@@@@@@@@@@@@   . @@(@@@(@ @@(@@@(@@ @@@@@@@@ @@(@@@(@@%@@@@@(@@ @@(@@@(@ %@(@@@(@@ @@@@@@@@ %@(@@@(@@%/   @@@@@@@@@@@@@
// @@@@@@@@@@@@@*  ( @  */  @ @@ */.  @ @ **.  @ @@ */  @@%@ **.  @ @  */  @ %@ */.  @ @ **.  @ %@ */  @@%.   @@@@@@@@@@@@@
// @@@@@@@@@@@@@     @  @&    @   &&  @    @&    @  @&   @%   @&  @ @  @&    %   &&  @    @&    %  @&   @%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@ **. @@((((#@*@@((((#@@*@@((((@@*@@((((#@@%@@(((#@@*@@((((#@*%@((((#@@*@@((((@@*%@((((#@@%#  *@@@@@@@@@@@@@
// @@@@@@@@@@@@@     @@@@@@@@ @@@@@@@@@ @@@@@@@@ @@@@@@@@@%@@@@@@@@ @@@@@@@@ %@@@@@@@@ @@@@@@@@ %@@@@@@@@%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@ . . &&&&&&&&*&&&&&&&&&*********/************///****//***((/*******/**%&&&&&&&&*%&&&&&&&&%*  *@@@@@@@@@@@@@
// @@@@@@@@@@@@@   / @@@@@@@@ @@@@@@@@@   %%%%%%%%%.   ,   %           ,   %%%%%%%%   %@@@@@@@@ %@@@@@@@@%,   @@@@@@@@@@@@@
// @@@@@@@@@@@@@     @@ (@(.@ @@ #@@.@@ . %%%%%%.   .     .((((((((((       . %%%%%   %@@(@@(@@ %@ @@(.@@%.   @@@@@@@@@@@@@
// @@@@@@@@@@@@@     @   (  @ @@ *(   @   %%%%       .@@@@@@@@@@@@@@@@@@      ,.%%%   %@ *    @ %@  (  @@%%  %@@@@@@@@@@@@@
// @@@@@@@@@@@@@*  * @  ((   .@   (/  @.  %#      (@@@@@@@@@@@@@@@@@@@@@@@((    ,.%   %   (/   .%  ((   @%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@   , @@ **  @*@@  ** @@*    ,    @@@@@@@@@@@@@@@@@@@@@@@@@@@@@   .    %@@ ** @@*%@ **  @@%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@ . , @@@@@@@@*@@@@@@@@@*     / (@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .      %@@@@@@@@*%@@@@@@@@%* ..@@@@@@@@@@@@@
// @@@@@@@@@@@@@     %%%%%%%%%%%%%%%%%%%    % .@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %%%%%%%%%%%%%%%%%%%%     @@@@@@@@@@@@
// @@@@@@@@@@@@@**** @@@@@@@@ @@@@@@@@@ ****%  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  *****%@@@@@@@@ %@@@@@@@@%*****@@@@@@@@@@@@
// @@@@@@@@@@@@@   / @@*   (@ @@     @@ ,   %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   %   %@@    @@ %@*   (@@%%  %@@@@@@@@@@@@@
// @@@@@@@@@@@@@   . @(/(%(/@ @@/(%(/#@     %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %@(((((#@ %@/(%(/@@%.   @@@@@@@@@@@@@
// @@@@@@@@@@@@@%  % @   (  @ @@ *(   @ %   %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %@ *    @ %@  (  @@%,   @@@@@@@@@@@@@
// @@@@@@@@@@@@@     @  @&  (.@(  &&  @.    %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   *   %(  @&  (.%( @&  (@%*  *@@@@@@@@@@@@@
// @@@@@@@@@@@@@ %%  @@@@@@@@*@@@@@@@@@*  % %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %@@@@@@@@*%@@@@@@@@%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@   , &&&&&&&&*&&&&&&&&&*    %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   **  %&&@@@&&&*%&&&&&&&&%(  *@@@@@@@@@@@@@
// @@@@@@@@@@@@@   , @@@@@@@@ @@@@@@@@@     %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %@@@@@@@@ %@@@@@@@@%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@*  * @@@@@@@@ @@@@@@@@@ ** (%  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %@@((((@@ %@@(((@@@%.   @@@@@@@@@@@@@
// @@@@@@@@@@@@@   , @@ @@@*@ @@ @@@*@@     %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@   %   %@@@@@@@@ %@ @@@*@@%%  %@@@@@@@@@@@@@
// @@@@@@@@@@@@@ **. @  **  @ @@ **,  @   * %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %@ **,  @ %@ **  @@%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@   . @  @@    @   @&  @     %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@    %  %   @&    %  @@   @%,   @@@@@@@@@@@@@
// @@@@@@@@@@@@@   . @@(##((@*@@((##(@@*    %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@  *   *%@@(##(@@*%@(##((@@%    @@@@@@@@@@@@@
// @@@@@@@@@@@@@     @@@@@@@@*@@@@@@@@@* % %%  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@       %@@@@@@@@*%@@@@@@@@% ,  @@@@@@@@@@@@@
// @@@@@@@@@@@@@,..( %%%%%%%%%%%%%%%%%%%    %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@        %%%%%%%%%%%%%%%%%%%,  .@@@@@@@@@@@@@
// @@@@@@@@@@@@@...( ..................   . %  @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@              ....  , .....(...@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
//
// Forgotten Runes Gate to The Seventh Realm
// https://forgottenrunes.com
// Twitter: @forgottenrunes
pragma solidity ^0.8.0;

import '../util/Ownablearama.sol';
import '@openzeppelin/contracts/token/ERC721/ERC721.sol';
import '@openzeppelin/contracts/security/ReentrancyGuard.sol';

/**
 * @dev This implements the tokens of the Gate To The Seventh Realm of the Runiverse. These are {ERC721} tokens.
 */
contract GateToTheSeventhRealm is Ownablearama, ReentrancyGuard, ERC721 {
    using Strings for uint256;

    /// @notice Counter to track the number minted so far
    uint256 public numMinted = 0;

    /// @notice Address of the minter
    address public minter;

    /// @notice The base URI for the metadata of the tokens
    string public baseTokenURI;

    string public constant R =
        'And when he had opened the seventh seal, there was silence in heaven about the space of half an hour';

    /**
     * @dev Create the contract and set the initial baseURI
     * @param baseURI string the initial base URI for the token metadata URL
     */
    constructor(string memory baseURI)
        ERC721('ForgottenRunesGateToTheSeventhRealm', 'SeventhRealm')
    {
        setBaseURI(baseURI);
    }

    /**
     * @dev Convenient way to initialize the contract
     * @param newMinter address of the minter contract
     */
    function initialize(address newMinter) public onlyOwner {
        setMinter(newMinter);
    }

    /**
     * @dev Returns the URL of a given tokenId
     * @param tokenId uint256 ID of the token to be minted
     * @return string the URL of a given tokenId
     */
    function tokenURI(uint256 tokenId)
        public
        view
        virtual
        override
        returns (string memory)
    {
        require(
            _exists(tokenId),
            'ERC721Metadata: URI query for nonexistent token'
        );

        return string(abi.encodePacked(baseTokenURI, tokenId.toString()));
    }

    function _baseURI() internal view virtual override returns (string memory) {
        return baseTokenURI;
    }

    /**
     * @dev Mint a new token
     * @param recipient address representing the owner of the new tokenId
     * @param tokenId uint256 ID of the token to be minted
     */
    function mint(address recipient, uint256 tokenId) public nonReentrant {
        require(_msgSender() == minter, 'Not a minter');
        numMinted += 1;
        _safeMint(recipient, tokenId);
    }

    /**
     * Only the owner can do these things
     */

    /**
     * @dev Sets a new base URI
     * @param newBaseURI string the new token base URI
     */
    function setBaseURI(string memory newBaseURI) public onlyOwner {
        baseTokenURI = newBaseURI;
    }

    /**
     * @dev Sets a new primary minter address
     * @param newMinter address of the minter contract
     */
    function setMinter(address newMinter) public onlyOwner {
        minter = newMinter;
    }

    function uploadImage(bytes calldata s) external onlyOwner {}

    function uploadAttributes(bytes calldata s) external onlyOwner {}
}